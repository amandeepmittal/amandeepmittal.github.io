<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Aman Mittal (@amanhimself)]]></title><description><![CDATA[Aman Mittal is a full-stack software developer specializing in web and mobile technologies leveraging JavaScript ecosystem. He is passionate about breaking down complex concepts, share them, write blog posts/tutorials and is a curriculum creator and technical writer for more than 15 online publications.]]></description><link>http://amanhimself.me/</link><image><url>http://amanhimself.me//logos/logo-48.png</url><title>Aman Mittal (@amanhimself)</title><link>http://amanhimself.me/</link></image><generator>Aman Mittal</generator><lastBuildDate>Sun, 02 Jun 2019 17:05:42 GMT</lastBuildDate><atom:link href="http://amanhimself.me//rss.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[How to Mock Data for Node.js Applications using faker.js]]></title><description><![CDATA[When we start to build an application, we generally do not want to worry much about data. To create a database and fill it with sample data seems much of a hassle to me personally…]]></description><link>http://amanhimself.me//how-to-mock-data-for-nodejs-applications-using-fakerjs/</link><guid isPermaLink="false">http://amanhimself.me//how-to-mock-data-for-nodejs-applications-using-fakerjs/</guid><category><![CDATA[nodejs]]></category><category><![CDATA[hackernoon]]></category><pubDate>Sat, 01 Apr 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*ENk6O_-iQYdMlnrM4w82kw.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;When we start to build an application, we generally do not want to worry much about data. To create a database and fill it with sample data seems much of a hassle to me personally. I rather focus more on creating RESTful API and front end of the application when I prototyping.&lt;/p&gt;
&lt;p&gt;However, this doesn’t mean I don’t pay attention to data organization in database. It’s important to have schemas of collections and documents or in any other way you want to organize your data. With this aspect complete, it brings clarity to &lt;em&gt;what&lt;/em&gt; and &lt;em&gt;how&lt;/em&gt; questions when creating APIs. In a recent scenario, building a prototype of an E-Commerce web application for a client, I found myself in a similar situation. I had a deadline to deliver the prototype with maximum number of functionalities checked required by the client. After settling on how to architecture database’s schemas, I went on searching​ and finding a gem to solve this issue: &lt;strong&gt;faker.js.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;enter-fakerjs&quot;&gt;&lt;a href=&quot;#enter-fakerjs&quot; aria-label=&quot;enter fakerjs permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enter faker.js&lt;/h3&gt;
&lt;p&gt;It’s a wonderful node module to create fake/mock data when you are facing a similar situation as me. fakerjs has its own API, and it’s huge. All credit goes to &lt;a href=&quot;https://twitter.com/marak&quot;&gt;&lt;strong&gt;Marak&lt;/strong&gt;&lt;/a&gt; who built it. It has a vast API for almost every use case with an excellent &lt;a href=&quot;https://github.com/marak/Faker.js/&quot;&gt;&lt;em&gt;documentation&lt;/em&gt; that can help you get familiar in minutes on Github.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let’s consider a test case where I want some &lt;em&gt;a user&lt;/em&gt; to have following amount of fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;li&gt;website&lt;/li&gt;
&lt;li&gt;address&lt;/li&gt;
&lt;li&gt;bio&lt;/li&gt;
&lt;li&gt;image/avatar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; faker &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;faker&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; User &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	email&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;internet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	website&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;internet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	address&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;streetAddress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;city&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;address&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	bio&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lorem&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sentences&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	image&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;image&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;avatar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; User&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1200/1*t8BjRlFjuUnbf0iXl-FZCQ.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;That’s it. This is how you mock data using faker.js. It’s quick, simple to setup and no hassle at all. You just have to add it to your &lt;code class=&quot;language-text&quot;&gt;npm&lt;/code&gt; dependencies:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install faker --save&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;fakerjs-data&quot;&gt;&lt;a href=&quot;#fakerjs-data&quot; aria-label=&quot;fakerjs data permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;faker.js Data&lt;/h4&gt;
&lt;p&gt;List of data that can generate faker.js:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;address&lt;/li&gt;
&lt;li&gt;commerce&lt;/li&gt;
&lt;li&gt;company&lt;/li&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;finance&lt;/li&gt;
&lt;li&gt;hacker&lt;/li&gt;
&lt;li&gt;helpers&lt;/li&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;internet&lt;/li&gt;
&lt;li&gt;lorem&lt;/li&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;phone&lt;/li&gt;
&lt;li&gt;random&lt;/li&gt;
&lt;li&gt;system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each element has a lot of sub-items that you can check &lt;a href=&quot;https://github.com/Marak/faker.js&quot;&gt;&lt;em&gt;here&lt;/em&gt;&lt;/a&gt; in the documentation.&lt;/p&gt;
&lt;p&gt;Another good thing about Faker I like is that it’s not only restricted to server side JavaScript only. You can mock data for browser JavaScript too. A little snippet from the documentation shows how to do this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;script src &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;faker.js&quot;&lt;/span&gt; type &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;script&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; randomName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; faker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Caitlyn Kerluke  var randomEmail = faker.internet.email(); // Rusty@arne.info  var randomCard = faker.helpers.createCard(); // random contact card containing many properties&amp;lt;/script&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API will help you to prototype your JavaScript/Node.js applications at a faster rate. Not only that, you can easily mock your TDD/BDD tests when creating a RESTful API utilising this library.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For&lt;/em&gt; &lt;a href=&quot;https://github.com/amandeepmittal/fakerjs&quot;&gt;&lt;em&gt;full source code at this Github Repository&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hackernoon.com/how-to-mock-data-for-node-js-applications-using-faker-js-b1f4c0e78102&quot;&gt;Originally Published at Hackernoon.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[Getting Started with Ionic Framework: An Overview]]></title><description><![CDATA[I have been getting familiar with  Ionic Framework  in past recent days. To start, I had a question in mind which might be similar to yours.  Why choose Ionic Framework? The…]]></description><link>http://amanhimself.me//getting-started-with-ionic-framework/</link><guid isPermaLink="false">http://amanhimself.me//getting-started-with-ionic-framework/</guid><category><![CDATA[mobile]]></category><category><![CDATA[ionic]]></category><category><![CDATA[hackernoon]]></category><pubDate>Sun, 26 Feb 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2560/1*nlhD6_U277a1s_VxSbH11g.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;I have been getting familiar with &lt;a href=&quot;http://ionicframework.com/&quot;&gt;Ionic Framework&lt;/a&gt; in past recent days. To start, I had a question in mind which might be similar to yours. &lt;strong&gt;&lt;em&gt;Why choose Ionic Framework?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The reasons I chose Ionic as my next framework to elaborate my skill-set, are listed here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ionic is all about &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, &lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Since I have been following JavaScript closely in past months and recently worked on a freelance project using technologies and framework (I am familiar with) such as Node.js, Express.js &amp;#x26; &lt;strong&gt;AngularJS.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;To build mobile applications using my current knowledge (that is of AngularJS)&lt;/li&gt;
&lt;li&gt;Learning curve is if you are familiar with AngularJS&lt;/li&gt;
&lt;li&gt;Ionic is cross-platform&lt;/li&gt;
&lt;li&gt;has its own UI components that feels &lt;em&gt;Bootstrapish&lt;/em&gt; and is easy to customize&lt;/li&gt;
&lt;li&gt;It’s open-source and has an active ever-growing community (&lt;a href=&quot;http://blog.ionic.io/announcing-ionic-2-0-0-final/&quot;&gt;with the release of version 2, especially&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With above “list of reasoning” I am also including few more points that Ionic provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;has its own Command Line interface (CLI) to &lt;em&gt;scaffold, develop&lt;/em&gt; and &lt;em&gt;deploy&lt;/em&gt; applications.&lt;/li&gt;
&lt;li&gt;it gives access to mobile device APIs through two options: ngCordova &amp;#x26; ionic-native&lt;/li&gt;
&lt;li&gt;application written in Ionic can be converted for a specific device (such as Android &amp;#x26; iOS) using Apache’s Cordova.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With all that said, I am going to briefly discuss few things in this article that you should know of if/when you are planning to start developing applications using &lt;em&gt;Ionic Framework&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;hybrid-mobile-architecture&quot;&gt;&lt;a href=&quot;#hybrid-mobile-architecture&quot; aria-label=&quot;hybrid mobile architecture permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Hybrid Mobile Architecture&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Did you think I am going to start this article by discussing some &lt;a href=&quot;https://devdactic.com/myth-hybrid-development/&quot;&gt;&lt;strong&gt;myths around Hybrid Mobile Applications&lt;/strong&gt;&lt;/a&gt;? Well I am not because there’s already an awesome article written by Simon on &lt;a href=&quot;https://devdactic.com&quot;&gt;DevDactic.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The genesis of Hybrid Mobile applications is to understand &lt;em&gt;what an Hybrid application is?&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hybrid application is a type of mobile application that uses browser window to display its interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This comes under the classification of &lt;strong&gt;types of mobile applications&lt;/strong&gt; that consists of three types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Native: developed using platform specific programming language such as Objective C or Java&lt;/li&gt;
&lt;li&gt;Mobile Websites: developed using web technologies such as HTML, CSS &amp;#x26; JavaScript and are accessible only through mobile web browser. They are actually web applications.&lt;/li&gt;
&lt;li&gt;Hybrid: cross-platform and have access to native APIs (mostly through plugins)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Architecture of Hybrid Mobile applications developed using Ionic Framework consists of two concepts that one must be familiar with ASAP: WebView &amp;#x26; Apache Cordova.&lt;/p&gt;
&lt;h3 id=&quot;what-is-webview&quot;&gt;&lt;a href=&quot;#what-is-webview&quot; aria-label=&quot;what is webview permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is WebView?&lt;/h3&gt;
&lt;p&gt;Think it of as a browser that runs inside the scope of a mobile application using Ionic. This browser implements code written in HTML, CSS and JavaScript.&lt;/p&gt;
&lt;p&gt;The application on a specific mobile operating system runs via tool like &lt;a href=&quot;https://cordova.apache.org/&quot;&gt;Cordova&lt;/a&gt;. It provides APIs written in JavaScript to interact with Native features of mobile device such as access to camera or a microphone.&lt;/p&gt;
&lt;p&gt;WebView communicates with Cordova’s APIs which then further communicates with mobile devices.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*hdwWntqxD-qOL8vf87DmAQ.png&quot; alt=&quot;Courtesy of [https://www.linkedin.com/in/shindesantosh](https://www.linkedin.com/in/shindesantosh)&quot;&gt;
Courtesy of &lt;a href=&quot;https://www.linkedin.com/in/shindesantosh&quot;&gt;https://www.linkedin.com/in/shindesantosh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebViews are so common these days that you can build desktop applications using &lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For detailed information on Hybrid Mobile Applications, I would like you to consider reading John Bristowe’s&lt;/em&gt; &lt;a href=&quot;http://developer.telerik.com/featured/what-is-a-hybrid-mobile-app/&quot;&gt;&lt;em&gt;article&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;pre-requisites-for-developing-an-ionic-application&quot;&gt;&lt;a href=&quot;#pre-requisites-for-developing-an-ionic-application&quot; aria-label=&quot;pre requisites for developing an ionic application permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-requisites for developing an Ionic Application?&lt;/h3&gt;
&lt;p&gt;You will need these tools as a part of your environment setup with your Operating System.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nodejs.org&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even if you do not use Node.js as a part of your development environment, to use Ionic you have to install it to get access to command line tools such as Bower, Gulp, and Ionic’s own Command Line Interface using its Node’s package manager: &lt;a href=&quot;http://www.npmjs.com&quot;&gt;&lt;em&gt;npm&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;installing-ionic&quot;&gt;&lt;a href=&quot;#installing-ionic&quot; aria-label=&quot;installing ionic permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Installing Ionic&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Ionic is a collection of Angular.js, UI Router, Angular directives, Angular services, JS utilities, and mobile focused CSS styles. These are bundled together as ionic.bundle.js and ionic.css.&lt;/p&gt;
&lt;p&gt;From your command line:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;$ npm install cordova ionic -g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will install a tool you are going make use of: Ionic CLI which is a command line utility.&lt;/p&gt;
&lt;p&gt;For detailed information on what it can do:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;$ ionic --help&lt;/code&gt; which list all the things tasks you can perform using this utility.&lt;/p&gt;
&lt;h3 id=&quot;ionic-app-development-process&quot;&gt;&lt;a href=&quot;#ionic-app-development-process&quot; aria-label=&quot;ionic app development process permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ionic App Development Process&lt;/h3&gt;
&lt;p&gt;After installing the command line utility, you can start by creating an app using Ionic’s starter templates. Ionic provides three starter templates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;blank &lt;code class=&quot;language-text&quot;&gt;ionic start myApp blank&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;tabs &lt;code class=&quot;language-text&quot;&gt;ionic start myApp tabs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sidemenu tart &lt;code class=&quot;language-text&quot;&gt;myApp sidemenu&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get a list of all Ionic templates available type in terminal:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;$ ionic start -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ionic start&lt;/code&gt; is the command that is used to scaffold an Ionic application.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*zYrkeFhqj6-YCDaF0LcWMg.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;scaffolding-an-ionic-application&quot;&gt;&lt;a href=&quot;#scaffolding-an-ionic-application&quot; aria-label=&quot;scaffolding an ionic application permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scaffolding an Ionic Application&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;$ ionic start -a &amp;quot;Example&amp;quot; -i app.example example blank&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command can help you scaffold an Ionic Project with following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;-a &amp;quot;Example&amp;quot;&lt;/code&gt; human readable name of application&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;-i app.example&lt;/code&gt; application ID&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;example&lt;/code&gt; project folder’s name&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;blank&lt;/code&gt; ionic template&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This steps allows the config file to update with application name and its ID. (We will learn more about the config file later).&lt;/p&gt;
&lt;p&gt;After this step, if you look closely at your terminal window, a script runs which installs six Cordova plugins mentioned &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cordova-plugin-device&lt;/code&gt; to get device information&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cordova-plugin-console&lt;/code&gt; defines a global instance of &lt;code class=&quot;language-text&quot;&gt;console.log()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cordova-plugin-whitelist&lt;/code&gt; implements whitelist policy for navigating the application’s WebView&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cordova-plugin-splashscreen&lt;/code&gt; it shows and hides a splash screen during the start of the application on a device&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cordova-plugin-statusbar&lt;/code&gt; provides functions to customize the iOS and Android StatusBar&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ionic-plugin-keyboard&lt;/code&gt; provides functions to interact with the keyboard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So now you have an Ionic project setup and you are familiar the basic elements of a project’s setup. It’s time to run the application from the command line using &lt;code class=&quot;language-text&quot;&gt;ionic serve&lt;/code&gt; command to run the app locally on a port.&lt;/p&gt;
&lt;p&gt;$ cd example&lt;br&gt;
$ ionic serve&lt;/p&gt;
&lt;p&gt;It will open a browser window in the default web browser and you will see similar to this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*JNQywRjia3Z98oF1cdwByA.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ionic serve --lab&lt;/code&gt; will run the app locally showing two instances of the app for iOS &amp;#x26; Android.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*LMFf8hdbrt1zPB1EAfoNPg.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;To run the application deliberately on a different port number: &lt;code class=&quot;language-text&quot;&gt;ionic serve -p 8080&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;ionic-project-structure&quot;&gt;&lt;a href=&quot;#ionic-project-structure&quot; aria-label=&quot;ionic project structure permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ionic Project Structure&lt;/h3&gt;
&lt;p&gt;Following is the root structure of an Ionic Project after scaffolding:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*k9wGw8Kg_lr2yjaGWIefPA.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;I will start describing what each folder/file in the root folder of the app contains, from top to bottom.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;hooks&lt;/code&gt; consists of scripts that are executed when a specific Cordova task is performed&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;plugins&lt;/code&gt; contains all plugins that comes added to project&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;www&lt;/code&gt; ionic app code that we write to build app&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;scss&lt;/code&gt; consists base scss file (styles of ionic UI components)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;.bowerrc&lt;/code&gt; path to directory where Bower dependencies get installed&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;.editorconfig&lt;/code&gt; default editor configuration for brevity&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;bower.json&lt;/code&gt; list of Bower dependencies&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;config.xml&lt;/code&gt; meta information needed by Cordova when converting Ionic application to platform specific. It consists of XML tags that describes the project&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;gulpfile.js&lt;/code&gt; build tasks used while developing application&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ionic.config.json&lt;/code&gt; information regarding ionic application&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;www-folder&quot;&gt;&lt;a href=&quot;#www-folder&quot; aria-label=&quot;www folder permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;www/ Folder&lt;/h4&gt;
&lt;p&gt;This folder is the main folder of our application and its where the code of our application is written. It consists of a app startup file &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; which act as first page of app, &lt;code class=&quot;language-text&quot;&gt;css&lt;/code&gt; to define custom styles, &lt;code class=&quot;language-text&quot;&gt;images&lt;/code&gt; to add images to app, &lt;code class=&quot;language-text&quot;&gt;js&lt;/code&gt; which further consists of &lt;code class=&quot;language-text&quot;&gt;app.js&lt;/code&gt; where we bootstrap AngularJS framework. In this file, &lt;code class=&quot;language-text&quot;&gt;ionic&lt;/code&gt; is passed as dependency using &lt;a href=&quot;https://docs.angularjs.org/guide/di&quot;&gt;Angular Dependency Injection&lt;/a&gt;. &lt;code class=&quot;language-text&quot;&gt;$ionicPlatform&lt;/code&gt; is the service that is injected to &lt;code class=&quot;language-text&quot;&gt;run&lt;/code&gt; method which enables Cordova plugins discussed earlier and the app itself.&lt;/p&gt;
&lt;p&gt;The last folder, &lt;code class=&quot;language-text&quot;&gt;lib&lt;/code&gt; contain the packages/dependencies that are installed using Bower. It contains a pre-loaded dependency of Ionic and Angular files.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I guess, you now have the idea of how an Hybrid application using Ionic Framework works.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hackernoon.com/getting-started-with-ionic-framework-an-overview-6725b687779b&quot;&gt;Originally Published at Hackernoon.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[Migrating from Expressjs 4 to 5]]></title><description><![CDATA[ExpressJS 5.0 is in alpha release stage but I believe we’ll be adding it as a dependency in our   files in matter of no time. This article gives some tips regarding the way we are…]]></description><link>http://amanhimself.me//migrating-from-expressjs-4-to-5/</link><guid isPermaLink="false">http://amanhimself.me//migrating-from-expressjs-4-to-5/</guid><category><![CDATA[expressjs]]></category><category><![CDATA[nodejs]]></category><category><![CDATA[hackernoon]]></category><pubDate>Wed, 11 Jan 2017 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*jukmvogCp9it7BUHdX9DUQ.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;ExpressJS 5.0 is in alpha release stage but I believe we’ll be adding it as a dependency in our &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; files in matter of no time. This article gives some tips regarding the way we are writing code using this framework and how we should adapt the new changes even if we are using ExpressJS &lt;em&gt;version 4.0&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I’ll start with most common thing such as &lt;code class=&quot;language-text&quot;&gt;response&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Express 5 no longer supports the signature &lt;code class=&quot;language-text&quot;&gt;res.send&lt;/code&gt; , instead we should adapt using this method in this form:&lt;/p&gt;
&lt;p&gt;res.status(statusCode).send();&lt;/p&gt;
&lt;p&gt;We have to set the status code before sending the response object. This new version of &lt;code class=&quot;language-text&quot;&gt;res.send&lt;/code&gt; is basically a chain of two methods: &lt;code class=&quot;language-text&quot;&gt;res.status&lt;/code&gt; &amp;#x26; &lt;code class=&quot;language-text&quot;&gt;res.send&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With that mind, ExpressJS 5 deprecates &lt;code class=&quot;language-text&quot;&gt;res.send(statusCode)&lt;/code&gt; method where &lt;code class=&quot;language-text&quot;&gt;statusCode&lt;/code&gt; is the number representing the HTTP response header status code. To send just the statusCode, that is, without sending the response object, we can use &lt;code class=&quot;language-text&quot;&gt;res.sendStatus(statusCode)&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;In similar manner, other methods that have been changed are:&lt;/p&gt;
&lt;p&gt;res.json() --&gt; res.status().json()&lt;br&gt;
res.jsonp() --&gt; res.status.jsonp()&lt;/p&gt;
&lt;p&gt;Another notable method that is going to be deprecated in next version of ExpressJS is &lt;code class=&quot;language-text&quot;&gt;res.sendfile()&lt;/code&gt; . Instead, we must adapt its new form, the camelCase one: &lt;code class=&quot;language-text&quot;&gt;res.sendFile()&lt;/code&gt; which is already been supported by the ExpressJS versions later than &lt;code class=&quot;language-text&quot;&gt;4.8.x&lt;/code&gt; . It comes with optional parameters that you can check them &lt;a href=&quot;http://expressjs.com/en/4x/api.html#res.sendFile&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Whether you are planning to use the alpha release of Express 5.0 or still going on with the latest versions of Express 4.0, I would suggest to start adapting these methods immediately.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The full list of changes or the official Express Migration Guide is to be found&lt;/em&gt; &lt;a href=&quot;http://expressjs.com/en/guide/migrating-5.html&quot;&gt;&lt;strong&gt;&lt;em&gt;here&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hackernoon.com/migrating-from-expressjs-4-to-5-156dcd80eb11&quot;&gt;Originally Published at Hackernoon.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[Using Bower With Heroku]]></title><description><![CDATA[Yes, I use  Bower  to maintain front-end dependencies, mostly for my side projects. Whatever you say, Bower is good and I am too anxious to mess with npm dependencies for front-end…]]></description><link>http://amanhimself.me//using-bower-with-heroku/</link><guid isPermaLink="false">http://amanhimself.me//using-bower-with-heroku/</guid><category><![CDATA[heroku]]></category><category><![CDATA[bower]]></category><pubDate>Thu, 29 Dec 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*zS_KNyajgV3amVbtWhsZaA.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Yes, I use &lt;a href=&quot;http://bower.io&quot;&gt;Bower&lt;/a&gt; to maintain front-end dependencies, mostly for my side projects. Whatever you say, Bower is good and I am too anxious to mess with npm dependencies for front-end development. Plus, I feel that maintaining front-end dependencies with Bower helps in keeping my application’s skeleton clean.&lt;/p&gt;
&lt;p&gt;So for last two of my projects, I have been using &lt;a href=&quot;http://heroku.com&quot;&gt;Heroku&lt;/a&gt; for deployment. Since I am maintaining front-end dependencies using Bower, I went through &lt;a href=&quot;https://devcenter.heroku.com/articles/buildpacks&quot;&gt;&lt;em&gt;this article&lt;/em&gt;&lt;/a&gt; which is about generating buildpacks on Heroku. I find generating buildpacks adds unnecessary complexity in the process of application deployment, at least for &lt;em&gt;rapid prototyping&lt;/em&gt;. Thus, I choose a different path. Adding Bower as an npm dependency seems an easy process and doesn’t add any kind of complexity. I find it’s great only if you are using Bower for rapid prototyping JavaScript applications.&lt;/p&gt;
&lt;p&gt;After you are done with building your application, all you have to do is add &lt;code class=&quot;language-text&quot;&gt;Bower&lt;/code&gt; as an npm dependency in &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; file and then add a script under &lt;code class=&quot;language-text&quot;&gt;npm scripts&lt;/code&gt; to execute a command that will install bower dependencies before the application is deployed on Heroku.&lt;/p&gt;
&lt;p&gt;Bower as dependency in &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token property&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;token property&quot;&gt;&quot;bower&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1.8.0&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then add a&lt;code class=&quot;language-text&quot;&gt;postinstall&lt;/code&gt; command in &lt;code class=&quot;language-text&quot;&gt;npm scripts&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;postinstall&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./node\_modules/bower/bin/bower install&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can read more about customizing &lt;a href=&quot;https://devcenter.heroku.com/articles/nodejs-support#customizing-the-build-process&quot;&gt;&lt;strong&gt;Heroku Build Process here&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hackernoon.com/using-bower-with-heroku-cdc791320c88&quot;&gt;Originally Published at Hackernoon.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[How to make a Twitter Bot with NodeJS]]></title><description><![CDATA[Earlier this week,  Rising Stack Community  published the second of tutorial on Building a Twitter Bot with NodeJS. Some of you may have read the first part here  on Medium…]]></description><link>http://amanhimself.me//how-to-make-a-twitter-bot-with-nodejs/</link><guid isPermaLink="false">http://amanhimself.me//how-to-make-a-twitter-bot-with-nodejs/</guid><category><![CDATA[twitter]]></category><category><![CDATA[nodejs]]></category><category><![CDATA[chatbotslife]]></category><pubDate>Thu, 15 Dec 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*N32NxcCDKDDjlc56ghcsaA.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Earlier this week, &lt;a href=&quot;https://community.risingstack.com/&quot;&gt;&lt;strong&gt;Rising Stack Community&lt;/strong&gt;&lt;/a&gt; published the second of tutorial on Building a Twitter Bot with NodeJS. Some of you may have read the first part here &lt;a href=&quot;https://hackernoon.com/create-a-simple-twitter-bot-with-node-js-5b14eb006c08#.43u5qmvts&quot;&gt;on Medium &lt;strong&gt;(&lt;em&gt;published by Hackernoon&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;)&lt;/em&gt;&lt;/strong&gt; while others might have gone through the first part of the guide on &lt;a href=&quot;https://community.risingstack.com/node-js-twitter-bot-tutorial/&quot;&gt;RisingStack Community.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;part-i-setup--getting-ready&quot;&gt;&lt;a href=&quot;#part-i-setup--getting-ready&quot; aria-label=&quot;part i setup  getting ready permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Part I: Setup &amp;#x26; Getting Ready&lt;/h3&gt;
&lt;p&gt;The idea of creating a Twitter Bot started in the back of my head as I was learning Nodejs a few months back and wanted to stay updated with happenings in the community. Nodejs community has grown enormously in past year and to keep up with that you need tools or browser tabs to do so.&lt;/p&gt;
&lt;p&gt;I built a simple Twitter Bot in Nodejs (which still works, &lt;a href=&quot;http://twitter.com/nodejstweet&quot;&gt;&lt;strong&gt;link here&lt;/strong&gt;&lt;/a&gt;)that fetches me tweets using general purpose #hashtags related to technologies such as #Nodejs #AngularJS #Mongodb &amp;#x26;c.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;Part 1,&lt;/em&gt; I discuss of starting out building a simple Twitter Bot that &lt;strong&gt;retweets and favorite tweets&lt;/strong&gt; based on the query used with setting up this Twitter application and getting access. To persistent communication with Twitter API, I use npm module called &lt;a href=&quot;https://www.npmjs.com/package/twit&quot;&gt;&lt;strong&gt;twit&lt;/strong&gt;&lt;/a&gt; which has a very good documentation to refer to and offer various methods to communicate to &lt;a href=&quot;https://dev.twitter.com/docs&quot;&gt;Twitter API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*l4nVQSFz3E3CmjD-g965pw.png&quot; alt=&quot;Courtsey: RisingStack Community| [https://community.risingstack.com/how-to-make-a-twitter-bot-with-node-js/](https://community.risingstack.com/how-to-make-a-twitter-bot-with-node-js/)&quot;&gt;
Courtsey: RisingStack Community| &lt;a href=&quot;https://community.risingstack.com/how-to-make-a-twitter-bot-with-node-js/&quot;&gt;https://community.risingstack.com/how-to-make-a-twitter-bot-with-node-js/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;part-2-advance-usage&quot;&gt;&lt;a href=&quot;#part-2-advance-usage&quot; aria-label=&quot;part 2 advance usage permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Part 2: Advance Usage&lt;/h3&gt;
&lt;p&gt;The second part of the guide extends the usability of the Twitter bot by making our Bot interact with user &lt;em&gt;(at a very high level)&lt;/em&gt; or &lt;strong&gt;in Twitter terms, to tweet back to any user who follows the bot.&lt;/strong&gt; This is done by using &lt;a href=&quot;https://dev.twitter.com/streaming/overview&quot;&gt;Twitter’s Streaming API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here is the&lt;/strong&gt; &lt;a href=&quot;https://community.risingstack.com/how-to-make-a-twitter-bot-with-node-js/&quot;&gt;&lt;strong&gt;link to Second Part of Building a Twitter Bot with NodeJS&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I received positive feedback by the people who followed the &lt;a href=&quot;https://hackernoon.com/create-a-simple-twitter-bot-with-node-js-5b14eb006c08#.5qwkbly78&quot;&gt;first part of the guide&lt;/a&gt; and that encouraged me to write a &lt;a href=&quot;https://community.risingstack.com/how-to-make-a-twitter-bot-with-node-js/&quot;&gt;second part&lt;/a&gt;. I hope you’ll have fun with it, since programming in NodeJS as a platform is really fun from a developer’s point of view, and a very pragmatic approach, I would say.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I am looking forward to grab a glimpse of YOUR Twitter Bot. If you are working on it or have already published it on Twitter, don’t forget to send me a link with Twitter handler of your bot in the comments below or you can add your Twitter Bot to this&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Nodejs Twitter Bot resource Github repo&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;https://github.com/amandeepmittal/awesome-twitter-bots&quot;&gt;&lt;strong&gt;&lt;em&gt;here&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://chatbotslife.com/how-to-make-a-twitter-bot-with-nodejs-d5cb04fdbf97&quot;&gt;Originally Published at Chatbotslife.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[Create a Simple Twitter Bot with Node.js]]></title><description><![CDATA[How about a Twitter Bot that retweets, favorites, on the basis of hashtags and replies to other users if they follow it? I made a similar kind of a Twitter Bot (@ nodejstweet…]]></description><link>http://amanhimself.me//create-a-simple-twitter-bot-with-nodejs/</link><guid isPermaLink="false">http://amanhimself.me//create-a-simple-twitter-bot-with-nodejs/</guid><category><![CDATA[twitter]]></category><category><![CDATA[nodejs]]></category><category><![CDATA[hackernoon]]></category><pubDate>Wed, 23 Nov 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*c19BGyJS9_XZ-qo4O8H65Q.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;How about a Twitter Bot that retweets, favorites, on the basis of hashtags and replies to other users if they follow it? I made a similar kind of a Twitter Bot (@&lt;a href=&quot;https://twitter.com/nodejstweet&quot;&gt;nodejstweet&lt;/a&gt;) that feeds me the latest or the ongoing news/articles/how-to&apos;s on a set of hashtags such as #Nodejs, #MongoDB, #AngularJS, #IonicFramework, et cetera. At the time I never expected it having more followers than me but that has been surpassed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*DcLASOdtPlO8p86oUg86JA.png&quot; alt=&quot;A glimpse of a Twitter Bot that I made for sole purpose of information&quot;&gt;
A glimpse of a Twitter Bot that I made for sole purpose of information&lt;/p&gt;
&lt;h3 id=&quot;what-this-bot-will-do&quot;&gt;&lt;a href=&quot;#what-this-bot-will-do&quot; aria-label=&quot;what this bot will do permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What this bot will do?&lt;/h3&gt;
&lt;p&gt;This is a simple Twitter bot and will retweet, favorite/like randomly on the basis of hashtags as a query that we will use and continue to do so after a certain period of time interval.&lt;/p&gt;
&lt;h3 id=&quot;what-you-need&quot;&gt;&lt;a href=&quot;#what-you-need&quot; aria-label=&quot;what you need permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What you need?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You must have &lt;a href=&quot;http://nodejs.org&quot;&gt;Node.js&lt;/a&gt; installed on your system.&lt;/li&gt;
&lt;li&gt;A Twitter Account.&lt;/li&gt;
&lt;li&gt;Your bot will be using &lt;code class=&quot;language-text&quot;&gt;[twit](https://www.npmjs.com/package/twit)&lt;/code&gt; which is an npm module to manipulate tweets and streams, and to communicate with the &lt;a href=&quot;https://dev.twitter.com/docs&quot;&gt;Twitter API&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lets-start&quot;&gt;&lt;a href=&quot;#lets-start&quot; aria-label=&quot;lets start permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let’s Start&lt;/h3&gt;
&lt;p&gt;Setup an empty directory and initialise it with:&lt;code class=&quot;language-text&quot;&gt;$ npm init&lt;/code&gt; to configure this web application with &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; file. Then create two new files: &lt;code class=&quot;language-text&quot;&gt;bot.js&lt;/code&gt; &amp;#x26; &lt;code class=&quot;language-text&quot;&gt;config.js&lt;/code&gt; in that directory.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;bot.js&lt;/code&gt; will be our main app file in which we will be writing the source code of our Twitter Bot, and so in &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; edit the &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt; field to:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token property&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;bot.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your current directory structure should look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;root/project-name
|- bot.js
|- config.js
|- package.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;configuring-and-granting-permissions-from-twitter-api&quot;&gt;&lt;a href=&quot;#configuring-and-granting-permissions-from-twitter-api&quot; aria-label=&quot;configuring and granting permissions from twitter api permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring and granting permissions from Twitter API&lt;/h4&gt;
&lt;p&gt;After logging to to your Twitter account, follow to this link: &lt;a href=&quot;https://apps.twitter.com/app/new&quot;&gt;https://apps.twitter.com/app/new&lt;/a&gt; to create a new application. Fill out the necessary fields in the form click on the button &lt;em&gt;Create Your Twitter Application.&lt;/em&gt; After creating the application, look for ‘Keys and Access Tokens’ under the nav-panes and click on ‘Generate Token Actions` and then copy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consumer Key&lt;/li&gt;
&lt;li&gt;Consumer Secret&lt;/li&gt;
&lt;li&gt;Access Token&lt;/li&gt;
&lt;li&gt;Access Token Secret&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open the &lt;code class=&quot;language-text&quot;&gt;config.js&lt;/code&gt; file and paste all four values inside it. Expose those values using &lt;code class=&quot;language-text&quot;&gt;module.export&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//config.js&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;\&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;\&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TWITTER&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;APP&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;CONFIGURATION&lt;/span&gt;
 \&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; consumer_key
 \&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; consumer_secret
 \&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; access_token
 \&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; access_token_secret
 \&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 consumer_key&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 consumer_secret&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 access_token&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 access_token_secret&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, the Twitter bot’s configuration is step is complete. &lt;em&gt;Please note,&lt;/em&gt; for every different application, the &lt;code class=&quot;language-text&quot;&gt;consumer key&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;consumer secret&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;access_token&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;access_token_secret&lt;/code&gt; will differ.&lt;/p&gt;
&lt;h3 id=&quot;building-the-bot&quot;&gt;&lt;a href=&quot;#building-the-bot&quot; aria-label=&quot;building the bot permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the bot&lt;/h3&gt;
&lt;p&gt;Since the configuration step is complete, now let’s install our third requisite that is &lt;a href=&quot;https://www.npmjs.com/package/twit&quot;&gt;Twitter API client for node&lt;/a&gt; and will help us to communicate to Twitter API and provide an API for all necessary actions &lt;em&gt;(such as retweet and favorite a tweet).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We will start by installing the dependency we need for our application.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install --save twit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the dependency has finished installing, go to the &lt;code class=&quot;language-text&quot;&gt;bot.js&lt;/code&gt; file and require the dependency and &lt;code class=&quot;language-text&quot;&gt;config.js&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; twit &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;’twit’&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; config &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;’&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js’&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pass the configuration (&lt;em&gt;consumer and access tokens&lt;/em&gt;) of our Twitter application in &lt;code class=&quot;language-text&quot;&gt;config.js&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;twit:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;var Twitter = new twit(config);&lt;/p&gt;
&lt;p&gt;So far, so good?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PLEASE NOTE: You must refer to&lt;/strong&gt; &lt;code class=&quot;language-text&quot;&gt;[**twit**](https://www.npmjs.com/package/twit)&lt;/code&gt; &lt;a href=&quot;https://www.npmjs.com/package/twit&quot;&gt;&lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;for a deep reference.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;retweet-bot&quot;&gt;&lt;a href=&quot;#retweet-bot&quot; aria-label=&quot;retweet bot permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retweet Bot&lt;/h4&gt;
&lt;p&gt;Let’s write a function expression that finds the latest tweets according to the query passed as a parameter. We will initialise a &lt;code class=&quot;language-text&quot;&gt;params&lt;/code&gt; object that will hold various properties to search a tweet, but most importantly &lt;code class=&quot;language-text&quot;&gt;query&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;q&lt;/code&gt; property that will refine our searches. Whatever value you feed in this property, our bot will search the tweets to retweet based on this criteria. You can feed this property values like a twitter handler, to monitor a specific twitter account or a #hashtag. For our example bot, we have find latest tweets on #nodejs.&lt;/p&gt;
&lt;p&gt;This is how the functionality of the retweet bot starts:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;retweet&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; params &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 q&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;#nodejs, #Nodejs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 result_type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;recent&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
 lang&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;en&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The other two properties: &lt;code class=&quot;language-text&quot;&gt;result_type&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;lang&lt;/code&gt; are optional. On defining the &lt;code class=&quot;language-text&quot;&gt;result_type: &amp;#39;recent&amp;#39;&lt;/code&gt; notifies bot to only search for the latest tweets, tweets that have occurred in the time period since our bot has started or it made the last retweet.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//%20for%20more%20parametes,%20see:%20https://dev.twitter.com/rest/reference/get/search/tweets&quot;&gt;There is a list of parameters provided by the Twitter API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our next step is to search for the tweets based on our parameters. For this, we will use &lt;code class=&quot;language-text&quot;&gt;Twitter.get&lt;/code&gt; function provided by &lt;code class=&quot;language-text&quot;&gt;twit&lt;/code&gt; API to GET any of the REST API endpoints. The REST API endpoint is a reference to the T&lt;a href=&quot;https://dev.twitter.com/docs&quot;&gt;witter API endpoint&lt;/a&gt; we are going to make a call to search for tweets. The &lt;code class=&quot;language-text&quot;&gt;Twitter.get&lt;/code&gt; function accepts three arguments: API endpoint, params object (defined by us) and a callback.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// RETWEET BOT ==========================&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// find latest tweet according the query &apos;q&apos; in params&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;retweet&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; params &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		q&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#nodejs, #Nodejs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// REQUIRED&lt;/span&gt;
		result_type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;recent&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		lang&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// for more parametes, see: https://dev.twitter.com/rest/reference/get/search/tweets&lt;/span&gt;

	Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;search/tweets&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// if there no errors&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token comment&quot;&gt;// grab ID of tweet to retweet&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; retweetId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;statuses&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id_str
			&lt;span class=&quot;token comment&quot;&gt;// Tell TWITTER to retweet&lt;/span&gt;
			Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;statuses/retweet/:id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; retweetId
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Retweeted!!!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;token comment&quot;&gt;// if there was an error while tweeting&lt;/span&gt;
					&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Something went wrong while RETWEETING... Duplication maybe...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// if unable to Search a tweet&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Something went wrong while SEARCHING...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To post or to retweet the tweet our bot has found we use &lt;code class=&quot;language-text&quot;&gt;Twitter.post()&lt;/code&gt; method to &lt;em&gt;POST any of the REST API endpoints&lt;/em&gt;. It also takes the same number of arguments as &lt;code class=&quot;language-text&quot;&gt;Twitter.get()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now to automate this action we defined above, we can use JavaScript’s timer function &lt;code class=&quot;language-text&quot;&gt;setInterval()&lt;/code&gt; to search and retweet after a specific period of time.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// grab &amp;amp; retweet as soon as program is running...&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;retweet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// retweet in every 50 minutes&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;retweet&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3000000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note that all JavaScript’s Timer functions take the &lt;em&gt;amount of time&lt;/em&gt; argument in milliseconds.&lt;/p&gt;
&lt;h4 id=&quot;favorite-bot&quot;&gt;&lt;a href=&quot;#favorite-bot&quot; aria-label=&quot;favorite bot permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Favorite Bot&lt;/h4&gt;
&lt;p&gt;Similar to &lt;code class=&quot;language-text&quot;&gt;retweet&lt;/code&gt; bot we can define and initialise another function expression that will search and &lt;em&gt;favorite&lt;/em&gt; a tweet randomly. Yes, the difference here is to search and grab the tweet randomly. We will start by creating a parameter object &lt;code class=&quot;language-text&quot;&gt;params&lt;/code&gt; that will consist of three properties as in &lt;code class=&quot;language-text&quot;&gt;retweet()&lt;/code&gt; function expression. The bot will search for tweets using the same &lt;code class=&quot;language-text&quot;&gt;.get()&lt;/code&gt; function provided by &lt;code class=&quot;language-text&quot;&gt;twit&lt;/code&gt; API to GET any of the Twitter API endpoints. In our case, we need &lt;code class=&quot;language-text&quot;&gt;search/tweets&lt;/code&gt;. Then we will store the status of the search for tweet to &lt;em&gt;favorite&lt;/em&gt; in a variable and in a another variable we will apply the random function by passing the “status of the search” variable as an argument.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// FAVORITE BOT====================&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// find a random tweet and &apos;favorite&apos; it&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;favoriteTweet&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; params &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		q&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#nodejs, #Nodejs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// REQUIRED&lt;/span&gt;
		result_type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;recent&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		lang&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// for more parametes, see: https://dev.twitter.com/rest/reference&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// find the tweet&lt;/span&gt;
	Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;search/tweets&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// find tweets&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; tweet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;statuses
		&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; randomTweet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ranDom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tweet&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// pick a random tweet&lt;/span&gt;

		&lt;span class=&quot;token comment&quot;&gt;// if random tweet exists&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; randomTweet &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token comment&quot;&gt;// Tell TWITTER to &apos;favorite&apos;&lt;/span&gt;
			Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;favorites/create&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; randomTweet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id_str &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;token comment&quot;&gt;// if there was an error while &apos;favorite&apos;&lt;/span&gt;
				&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CANNOT BE FAVORITE... Error&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;FAVORITED... Success!!!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// grab &amp;amp; &apos;favorite&apos; as soon as program is running...&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;favoriteTweet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// &apos;favorite&apos; a tweet in every 60 minutes&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;favoriteTweet&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3600000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// function to generate a random tweet tweet&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ranDom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the tweets searched by our bot are all stored in an array. Again, we use JavaScript’s timer function &lt;code class=&quot;language-text&quot;&gt;setInterval()&lt;/code&gt;to search and favorite the tweet after a specific period of time in milliseconds.&lt;/p&gt;
&lt;p&gt;The complete module: &lt;code class=&quot;language-text&quot;&gt;bot.js&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Dependencies =========================&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; twit &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;twit&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
	config &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./config&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; Twitter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;twit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// RETWEET BOT ==========================&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// find latest tweet according the query &apos;q&apos; in params&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;retweet&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; params &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		q&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#nodejs, #Nodejs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// REQUIRED&lt;/span&gt;
		result_type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;recent&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		lang&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;search/tweets&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// if there no errors&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token comment&quot;&gt;// grab ID of tweet to retweet&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; retweetId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;statuses&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id_str
			&lt;span class=&quot;token comment&quot;&gt;// Tell TWITTER to retweet&lt;/span&gt;
			Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;statuses/retweet/:id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; retweetId
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Retweeted!!!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;token comment&quot;&gt;// if there was an error while tweeting&lt;/span&gt;
					&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
						console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Something went wrong while RETWEETING... Duplication maybe...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
					&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// if unable to Search a tweet&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Something went wrong while SEARCHING...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// grab &amp;amp; retweet as soon as program is running...&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;retweet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// retweet in every 50 minutes&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;retweet&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3000000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// FAVORITE BOT====================&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// find a random tweet and &apos;favorite&apos; it&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;favoriteTweet&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; params &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		q&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#nodejs, #Nodejs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// REQUIRED&lt;/span&gt;
		result_type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;recent&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
		lang&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// find the tweet&lt;/span&gt;
	Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;search/tweets&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; params&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// find tweets&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; tweet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;statuses
		&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; randomTweet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ranDom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tweet&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// pick a random tweet&lt;/span&gt;

		&lt;span class=&quot;token comment&quot;&gt;// if random tweet exists&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; randomTweet &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token comment&quot;&gt;// Tell TWITTER to &apos;favorite&apos;&lt;/span&gt;
			Twitter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;favorites/create&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; randomTweet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id_str &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;token comment&quot;&gt;// if there was an error while &apos;favorite&apos;&lt;/span&gt;
				&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;CANNOT BE FAVORITE... Error&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
					console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;FAVORITED... Success!!!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// grab &amp;amp; &apos;favorite&apos; as soon as program is running...&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;favoriteTweet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// &apos;favorite&apos; a tweet in every 60 minutes&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;favoriteTweet&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3600000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// function to generate a random tweet tweet&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ranDom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;usage&quot;&gt;&lt;a href=&quot;#usage&quot; aria-label=&quot;usage permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h4&gt;
&lt;p&gt;To run this bot, go to your terminal:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;node bot.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this monotonous process you can use &lt;code class=&quot;language-text&quot;&gt;npm scripts&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;nodemon.&lt;/code&gt; You can also deploy this app on &lt;code class=&quot;language-text&quot;&gt;Heroku&lt;/code&gt; for a continuous integration.&lt;/p&gt;
&lt;p&gt;To use npm scripts, make this edit under &lt;code class=&quot;language-text&quot;&gt;scripts&lt;/code&gt; in &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token property&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;node bot.js&quot;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then from terminal:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ npm start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are various ways to write a Twitter Bot, this is just one way. Your bot can be smart and you can do various things with it. You just have to refer to &lt;code class=&quot;language-text&quot;&gt;[twit](https://www.npmjs.com/package/twit)&lt;/code&gt; &lt;a href=&quot;https://www.npmjs.com/package/twit&quot;&gt;documentation&lt;/a&gt; for other RESTful API methods to manipulate &lt;a href=&quot;http://REST%20API%20Endpoints:%20https://dev.twitter.com/rest/public&quot;&gt;Twitter API endpoints&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For further reading check out &lt;a href=&quot;https://botwiki.org/bots/twitterbots/&quot;&gt;Botwiki.org&lt;/a&gt; for various types of bots on vast amount of platforms. For advanced reading, check out &lt;a href=&quot;https://botwiki.org/tutorials/twitterbots/&quot;&gt;Botwiki’s list of tutorials of Twitter Bots in different programming languages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope this was helpful! See you on &lt;a href=&quot;https://twitter.com/amanhimself&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hackernoon.com/create-a-simple-twitter-bot-with-node-js-5b14eb006c08&quot;&gt;Originally Published at Hackernoon.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[ATOM - An Editor of 21st Century]]></title><description><![CDATA[The  Atom  I am talking about is not a small particle in the world of developers. Built and maintained by  Github  and the  community , it is more than just an editor. In our world…]]></description><link>http://amanhimself.me//atom-an-editor-for-21st-century/</link><guid isPermaLink="false">http://amanhimself.me//atom-an-editor-for-21st-century/</guid><category><![CDATA[tools]]></category><category><![CDATA[editor]]></category><pubDate>Thu, 14 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The &lt;a href=&quot;http://atom.io&quot;&gt;Atom&lt;/a&gt; I am talking about is not a small particle in the world of developers. Built and maintained by &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt; and the &lt;a href=&quot;https://atom.io/packages&quot;&gt;community&lt;/a&gt;, it is more than just an editor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*duMcWwa6XPyagy5KTtqPMA.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;In our world, in the world of developers, an editor plays an amount of significant role when it comes to writing code. They might seem just a tool, as a matter of fact, they are, but for someone who takes pleasure in writing code, it is an essential piece in their setup.&lt;/p&gt;
&lt;p&gt;Using an editor is really a matter of choice, your comfort zone but the game of plugins have a big role to play. As yourself, I have tried my hands on different editors &amp;#x26; IDEs and for now I have decide to settle with Atom for its enormous amount of plugins available. Another reason for me is that it’s written in JavaScript (exactly CoffeScript &amp;#x26; since I am a JS enthusiast) and is completely free to use because of its open source normality.&lt;/p&gt;
&lt;p&gt;It is inspiring to open-source community as well. Few months back, Facebook released there version called &lt;a href=&quot;http://nuclide.io/docs/quick-start/getting-started/&quot;&gt;Nuclide&lt;/a&gt; which focus more on mobile development. Then there is &lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt; for building cross-platform desktop application. Both are based on Atom Shell.&lt;/p&gt;
&lt;p&gt;Atom is mature in terms of plugins when comes to keeping the pace with newer technologies. When I started out with Node.js, I tried to stick with &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;Webstorm IDE&lt;/a&gt; but soon Atom lured me for its support of &lt;a href=&quot;http://ionicframework.com/&quot;&gt;frameworks like Ionic&lt;/a&gt; (a plugin called &lt;a href=&quot;https://atom.io/packages/ionic-preview&quot;&gt;&lt;em&gt;Ionic-Preview&lt;/em&gt;&lt;/a&gt; and I am still exploring) thanks to the community plugins and the other matter of fact that it’s open source.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*Fr51xjMu47_6XTgRD5NZRQ.jpeg&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;packages&quot;&gt;&lt;a href=&quot;#packages&quot; aria-label=&quot;packages permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h3&gt;
&lt;p&gt;There are more than 4.5k +packages published already. To view, Open the Settings view by clicking Packages &gt; Settings View &gt; Open in the menu bar or by using the &lt;em&gt;(cmd + ,)&lt;/em&gt; keyboard shortcut.&lt;/p&gt;
&lt;p&gt;Atom Packages are categorized further into:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Community packages:&lt;/em&gt; Packages written by people outside of GitHub’s Atom team.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Core packages:&lt;/em&gt; These are developed by the Atom team and come bundled with Atom but you can disable them if they are no use to you.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Development packages:&lt;/em&gt; Packages which you have on your machine and use in Atom from that local source.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Core Packages do provide support for most favourable programming/scripting languages but if you are using something out of the box then you must check the Community packages. Chances of finding the &lt;em&gt;one&lt;/em&gt; are in your favour there.&lt;/p&gt;
&lt;p&gt;If you are still unable to find what you are looking, you should try &lt;a href=&quot;https://www.sitepoint.com/how-to-write-a-syntax-highlighting-package-for-atom/&quot;&gt;developing a package for yourself and then if you like share it with the community.&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;tip--decreasing-startup-time&quot;&gt;&lt;a href=&quot;#tip--decreasing-startup-time&quot; aria-label=&quot;tip  decreasing startup time permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TIP- Decreasing Startup Time&lt;/h3&gt;
&lt;p&gt;There may come a period of time when your Atom might behave sluggishly. What will you do?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You’ll remove all the packages (a.k.a plugins) you don’t use but for some reason you had them installed,&lt;/li&gt;
&lt;li&gt;or there isn’t much use of that particular package and you can do without it,&lt;/li&gt;
&lt;li&gt;or it was there just for fun. But before removing the packages, one must know which package is consuming how much startup time. You might want some of those unnecessary packages to stay with you if you know they are not the real culprits who are slowing down your development environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*eEGoeeQveSoA4LQPUJ7TOQ.png&quot; alt=&quot;The line indicating the startup time will always be in every package description. It signifies the time consumed by packages to load at the start of Atom Application in milliseconds.&quot;&gt;
The line indicating the startup time will always be in every package description. It signifies the time consumed by packages to load at the start of Atom Application in milliseconds.&lt;/p&gt;
&lt;p&gt;I have seen (&lt;em&gt;mostly on online forums&lt;/em&gt;) some developers groan about this kind of sluggishness but I haven’t met it yet.&lt;/p&gt;
&lt;h4 id=&quot;recommended-packages&quot;&gt;&lt;a href=&quot;#recommended-packages&quot; aria-label=&quot;recommended packages permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Recommended Packages&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Most of these packages are helpful in my daily JavaScript coding environment. I think they will be helpful to you too.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/open-recent&quot;&gt;&lt;strong&gt;open-recent&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(to continue where you left)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/sync-settings&quot;&gt;&lt;strong&gt;sync-settings&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(do you work more than one machine? This for you)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/ionic-preview&quot;&gt;&lt;strong&gt;Ionic-Preview&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(for people who are working Ionic Framework)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/terminal-plus&quot;&gt;&lt;strong&gt;terminal-plus&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(terminal inside atom)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;a href=&quot;https://atom.io/packages/atom-jade&quot;&gt;&lt;strong&gt;tom-jade&lt;/strong&gt;&lt;/a&gt; (&lt;em&gt;there is support for&lt;/em&gt; &lt;a href=&quot;https://atom.io/packages/language-ejs&quot;&gt;&lt;em&gt;ejs&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,&lt;/em&gt; &lt;a href=&quot;https://atom.io/packages/atom-handlebars&quot;&gt;&lt;em&gt;handlebars&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,&lt;/em&gt; &lt;a href=&quot;https://atom.io/packages/language-mustache&quot;&gt;&lt;em&gt;mustache&lt;/em&gt;&lt;/a&gt; &lt;em&gt;too)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/jade&quot;&gt;&lt;strong&gt;jade&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(if you are into jade, this is a snippets package)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/js-hyperclick&quot;&gt;&lt;strong&gt;js-hyperclick&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(as your project goes bigger, you will get addicted to it)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-lupa&quot;&gt;&lt;strong&gt;atom-lupa&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(nice one if your daily musings includes React)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/autocomplete-modules&quot;&gt;&lt;strong&gt;autocomplete-modules&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(Node.js devs: autocompletes require statements)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-pair&quot;&gt;&lt;strong&gt;atom-pair&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(developed by the guys at&lt;/em&gt; &lt;a href=&quot;http://blog.pusher.com&quot;&gt;&lt;em&gt;Pusher&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, a must if you do pair coding)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/javascript-snippets&quot;&gt;&lt;strong&gt;javascript-snippets&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(JavaScript and Node.js snippets)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-nodejs-snippets&quot;&gt;&lt;strong&gt;atom-nodejs-snippets&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(this is another Nodejs &amp;#x26; JavaScript snippet package, made by me. Supports ES6 syntax)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/linter&quot;&gt;&lt;strong&gt;linter&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://atom.io/packages/linter-jshint&quot;&gt;&lt;strong&gt;linter-jshint&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-ternjs&quot;&gt;&lt;strong&gt;atom-ternjs&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(JavaScript code intelligence for Atom)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/encourage&quot;&gt;&lt;strong&gt;encourage&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;(a nice one to have,&lt;/em&gt; &lt;a href=&quot;https://medium.freecodecamp.com/learning-to-code-when-it-gets-dark-e485edfb58fd#.1o6f4wmx4&quot;&gt;&lt;em&gt;if you are having a dark day&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, fun)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main advantage of an editor like Atom is that you can highly customize it. You can hack it, make your own packages, or use the one that are already there in the community and bend them as per your needs.&lt;/p&gt;
&lt;h3 id=&quot;lastly&quot;&gt;&lt;a href=&quot;#lastly&quot; aria-label=&quot;lastly permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lastly,&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*mYZtJ4HlZAeJKj-CW0CP7g.jpeg&quot; alt=&quot;Don’t forget to check the key bindings&quot;&gt;
Don’t forget to check the key bindings&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: At the time of writing this post, Webstorm IDE did not have support for frameworks like Ionic and the latest Atom Version is 1.8.0.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I haven’t covered all the plugins that I use but what I think are necessary. What about you? I would love to hear about the plugins you use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://medium.com/@amanhimself/atom-an-editor-of-21st-century-d38271362e3&quot;&gt;Originally Published at Medium.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[How process.nextTick() works in Node.js?]]></title><description><![CDATA[The  process  object is a one of the few global objects provided by the Node.js core API. It can be access from anywhere, thus its methods can also be accessed. Such is a method…]]></description><link>http://amanhimself.me//how-process-next-tick-works-in-nodejs/</link><guid isPermaLink="false">http://amanhimself.me//how-process-next-tick-works-in-nodejs/</guid><category><![CDATA[nodejs]]></category><pubDate>Sat, 25 Jun 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;&lt;em&gt;process&lt;/em&gt;&lt;/a&gt; object is a one of the few global objects provided by the Node.js core API. It can be access from anywhere, thus its methods can also be accessed. Such is a method called &lt;strong&gt;process.nextTick()&lt;/strong&gt; which is used by developers in realtime applications everyday to defer the execution of a function until the next &lt;a href=&quot;https://medium.com/@amanhimself/the-node-js-system-51090c35dddc&quot;&gt;Event Loop Iteration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Browser JavaScript introduced us functions like &lt;em&gt;setTimeout()&lt;/em&gt; to defer tasks in the near future. The &lt;em&gt;setTimeout()&lt;/em&gt; function takes a callback function and a number value representing the time after which the callback function will be executed, in milliseconds.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;callback&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Node.js, each iteration of an Event Loop is called a &lt;em&gt;tick.&lt;/em&gt; To schedule a callback function to be invoked in the next iteration of the Event Loop, we use &lt;strong&gt;process.nextTick()&lt;/strong&gt;. It just takes a callback with no time bound, since it will be executing in the next iteration of the Event Loop.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;callback&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The difference between setTimeout() and process.nextTick() is that the process.nextTick() function is specific to the Node.js Event Loop. setTimeout() uses JavaScript runtime to schedule its own queue of events. When using process.nextTick(), callback function associated with &lt;a href=&quot;https://gist.github.com/mmalecki/1257394&quot;&gt;it runs immediately after events in the Event Queue are processed by the Event Loop in a single iteration. In comparison to setTimeout(), it is faster since queue associated with setTimeout() or the JavaScript runtime.&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Processed in next iteration&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cb&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Processed in the first iteration&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above snippet is an example of how process.nextTick() works. You can save the snippet in a file.js and run using &lt;strong&gt;&lt;em&gt;$node file.js&lt;/em&gt;&lt;/strong&gt; from your terminal. You will definitely notice that the second console.log printed before the console.log associated with function cb().&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Processed in the first iteration
Processed in next iteration&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Further Reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/mmalecki/1257394&quot;&gt;&lt;strong&gt;process.nextTick vs setTimeout(fn, 0)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/docs/latest/api/process.html#process_process_nexttick_callback_args&quot;&gt;&lt;strong&gt;Nodejs Official Docs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://howtonode.org/understanding-process-next-tick&quot;&gt;&lt;strong&gt;Understanding process.nextTick()&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://medium.com/@amanhimself/how-process-nexttick-works-in-node-js-cb327812e083&quot;&gt;Originally Published at Medium.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[The Node.js System]]></title><description><![CDATA[When I started learning  Node.js , I always wondered, how does it work? How is it inside Node.js?  Event loop and Event Queue  jargons are digested. But what exactly is going on…]]></description><link>http://amanhimself.me//the-nodejs-system/</link><guid isPermaLink="false">http://amanhimself.me//the-nodejs-system/</guid><category><![CDATA[nodejs]]></category><category><![CDATA[hackernoon]]></category><pubDate>Fri, 22 Apr 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2560/1*aeWo6e6FC8InJwBl3TmpDw.jpeg&quot;&gt;&lt;/p&gt;
&lt;p&gt;When I started learning &lt;a href=&quot;http://www.nodejs.org&quot;&gt;Node.js&lt;/a&gt;, I always wondered, how does it work? How is it inside Node.js? &lt;em&gt;Event loop and Event Queue&lt;/em&gt; jargons are digested. But what exactly is going on? Where do those jargons &lt;em&gt;Event Loop and Event Queue&lt;/em&gt; come from.To satisfy my curiosity as well to know the answer to my previous question, I went in depth as much as I can and came across some things which I’d like to share with you. In brief, this article is about **Node.js System **— a glimpse of internal workings of Node.&lt;/p&gt;
&lt;p&gt;If you are familiar with Node.js, it is a known fact that Node.js is single threaded. If you are from programming/computer science background you know what a thread means. Consider this scenario: traditionally — an I/O request comes to a web server and is assigned to an available thread, and for each concurrent connection there is one thread available. That request is handled on the specific thread until it is fulfilled and the response is sent.&lt;/p&gt;
&lt;p&gt;This scenario is a perfect example of &lt;strong&gt;Blocking I/O&lt;/strong&gt; because while handling a particular request by a specific thread, there will be some idle time when the operations are being done &lt;em&gt;(such as retrieving a file, opening it, reading it, etc.).&lt;/em&gt; A single thread consumes memory. A longer running thread for each connection and then sitting idly for some amount of time is not considered an efficient way in the &lt;a href=&quot;https://medium.com/@amanhimself/the-node-way-philosophy-of-a-platform-f9738ed5f9d2#.w77h292q9&quot;&gt;world of Node.js.&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;enter-reactor-pattern--heart-of-nodejs&quot;&gt;&lt;a href=&quot;#enter-reactor-pattern--heart-of-nodejs&quot; aria-label=&quot;enter reactor pattern  heart of nodejs permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enter Reactor Pattern- Heart of Node.js&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Reactor Pattern&lt;/strong&gt; is an idea of non-blocking I/O operations in Node.js. This pattern provides a handler&lt;em&gt;(in case of Node.js, a&lt;/em&gt; &lt;strong&gt;&lt;em&gt;callback function&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;)&lt;/em&gt; that is associated with each I/O operation. When an I/O request is generated, it is submitted to a &lt;em&gt;demultiplexer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This &lt;em&gt;demultiplexer&lt;/em&gt; is a notification interface that is used to handle concurrency in &lt;em&gt;non-blocking I/O&lt;/em&gt; mode and collects every request in form of an event and queues each event in a queue. Thus, the demultiplexer provides the &lt;strong&gt;Event Queue&lt;/strong&gt;, which we often hear. When a request is collected by the demultiplexer, it returns the control back to the system and does not blocks the I/O. At the same time, there is an &lt;strong&gt;Event Loop&lt;/strong&gt; which iterates over the items in the Event Queue. Every event has a callback function associated with it, and that callback function is invoked when the Event Loop iterates.&lt;/p&gt;
&lt;p&gt;The callback function further mostly have other callbacks associated within representing some asynchronous operations. These operations are inserted in the Event Queue by the demultiplexer and are ready to be processed once the Event Loop iterates over them. That is why calls to other operations must be asynchronous.&lt;/p&gt;
&lt;p&gt;When all the items in the Event Queue are processed and there are no pending operations left, Node.js terminates the application automatically.&lt;/p&gt;
&lt;h3 id=&quot;building-blocks-of-nodejs&quot;&gt;&lt;a href=&quot;#building-blocks-of-nodejs&quot; aria-label=&quot;building blocks of nodejs permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Blocks of Node.js&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Reactor Pattern&lt;/li&gt;
&lt;li&gt;libuv&lt;/li&gt;
&lt;li&gt;A set of Bindings&lt;/li&gt;
&lt;li&gt;Chrome’s V8&lt;/li&gt;
&lt;li&gt;Core JS Library&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;libuv&quot;&gt;&lt;a href=&quot;#libuv&quot; aria-label=&quot;libuv permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;http://docs.libuv.org/en/v1.x/&quot;&gt;&lt;em&gt;libuv&lt;/em&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Pronounced as “lib u v”, is library written in C language to make Node.js compatible with every OS and provide the non-blocking I/O behaviour. &lt;a href=&quot;http://docs.libuv.org/en/v1.x/&quot;&gt;&lt;em&gt;libuv&lt;/em&gt;&lt;/a&gt; is the low-level engine that implements &lt;em&gt;reactor pattern&lt;/em&gt; thus providing an API for creating the Event Loop, managing an Event Queue and running asynchronous I/O operations. It is built specifically to provide a unified experience over different Operating Systems.&lt;/p&gt;
&lt;h4 id=&quot;need-for-libuv&quot;&gt;&lt;a href=&quot;#need-for-libuv&quot; aria-label=&quot;need for libuv permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need for libuv?&lt;/h4&gt;
&lt;p&gt;Each operating system has its own interface for the demultiplexer. Such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Kqueue&quot;&gt;Kqueue&lt;/a&gt; for Mac OS X, &lt;a href=&quot;https://en.wikipedia.org/wiki/Input/output_completion_port&quot;&gt;IOCP&lt;/a&gt; for Windows and &lt;a href=&quot;https://en.wikipedia.org/wiki/Epoll&quot;&gt;Epoll&lt;/a&gt; for Linux. Different multiplexers will behave differently when handling an I/O request. And then, each I/O operation can differ in its behaviour within the same operating system. This creates an inconsistency and to overcome this inconsistency &lt;em&gt;libuv&lt;/em&gt; is the solution.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I am not going to talk about internal workings of libuv here, not an expert on that, myself. For more info on libuv&lt;/em&gt; &lt;a href=&quot;http://docs.libuv.org/&quot;&gt;&lt;em&gt;check their docs&lt;/em&gt;&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href=&quot;http://www.slideshare.net/saghul/libuv-nodejs-and-everything-in-between&quot;&gt;&lt;em&gt;this slide&lt;/em&gt;&lt;/a&gt; &lt;em&gt;by&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Saúl Ibarra Corretgé&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;(&lt;/em&gt;&lt;a href=&quot;https://twitter.com/saghul&quot;&gt;&lt;em&gt;@saghul&lt;/em&gt;&lt;/a&gt;&lt;em&gt;) is a good start.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/libuv/libuv&quot;&gt;&lt;em&gt;Also, libuv is independently maintained by awesome developers.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;set-of-bindings&quot;&gt;&lt;a href=&quot;#set-of-bindings&quot; aria-label=&quot;set of bindings permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set of Bindings&lt;/h4&gt;
&lt;p&gt;These set of bindings are responsible for wrapping and exposing &lt;em&gt;libuv&lt;/em&gt; and other low-level functionality to JavaScript.&lt;/p&gt;
&lt;h4 id=&quot;v8&quot;&gt;&lt;a href=&quot;#v8&quot; aria-label=&quot;v8 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;V8&lt;/h4&gt;
&lt;p&gt;It’s a &lt;a href=&quot;https://developers.google.com/v8/&quot;&gt;runtime engine developed by Google for Chrome&lt;/a&gt; browser for JavaScript. It is the reason Node.js is fast and efficient.&lt;/p&gt;
&lt;h4 id=&quot;core-library&quot;&gt;&lt;a href=&quot;#core-library&quot; aria-label=&quot;core library permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Library&lt;/h4&gt;
&lt;p&gt;This is a JavaScript library that implements high-level Node.js API (&lt;em&gt;a.k.a. node-core&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*dTYKv5fII4doUAqJSA51Qg.png&quot; alt=&quot;More accurate image of Event Loop inside Node.js&quot;&gt;&lt;/p&gt;
&lt;p&gt;More accurate image of Event Loop inside Node.js&lt;/p&gt;
&lt;p&gt;The image borrowed above clarifies and represents a complete Node.js System. I hope this article has made things more clear as it did to me.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://hackernoon.com/the-node-js-system-51090c35dddc&quot;&gt;Originally Published at Hackernoon.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[The Node Way - Philosophy of a Platform]]></title><description><![CDATA[Last week, when  Node.js  community introduced its logo, it got me into thinking of why this technology as fresh in my mind as when I was first introduced to it a few months back…]]></description><link>http://amanhimself.me//wordpress-from-scratch-part-two/</link><guid isPermaLink="false">http://amanhimself.me//wordpress-from-scratch-part-two/</guid><category><![CDATA[nodejs]]></category><pubDate>Thu, 10 Mar 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Last week, when &lt;a href=&quot;https://nodejs.org/en/blog/&quot;&gt;Node.js&lt;/a&gt; community introduced its logo, it got me into thinking of why this technology as fresh in my mind as when I was first introduced to it a few months back. Why is that spark still ignited in the back of my head? The answer to this is the philosophy behind the technology of Node.js platform.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*7xUxphx7WwttvlFu5gVvVw.png&quot; alt=&quot;The Node.js Logo&quot;&gt;
The Node.js Logo&lt;/p&gt;
&lt;p&gt;Every platform has its own philosophy, its own set of rules, its own principles and guidelines. This is necessary for the evolution of a platform and is important for developing an application using that platform. (&lt;em&gt;Otherwise, we all can get carried away.)&lt;/em&gt; Node.js has its own philosophy, since its a platform, and it manages to find a middleground between JavaScript and UNIX.&lt;/p&gt;
&lt;p&gt;Two of the most important principles of UNIX that are adaptable in Node.js are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modularity, keeping simple parts short, connected with clean interfaces.&lt;/li&gt;
&lt;li&gt;A program should do one thing and it should do that &lt;em&gt;awesomely.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other rules described by Eric Steven Raymond in &lt;a href=&quot;http://www.catb.org/esr/writings/taoup/html/index.html&quot;&gt;The Art of UNIX Programming&lt;/a&gt; might fit to some extent but the two aforementioned are necessary to use Node.js pragmatically.&lt;/p&gt;
&lt;p&gt;In Node.js this &lt;em&gt;pragmaticism&lt;/em&gt; is provided the by a &lt;strong&gt;‘module’.&lt;/strong&gt; &lt;em&gt;Module&lt;/em&gt; is the fundamental to structure the code of a program in Node.js. &lt;em&gt;Module&lt;/em&gt; is also the building block of a package. (&lt;em&gt;A package is any application or reusable libraries).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The principle here is to design small modules in terms of code and in terms of application scope. This principle provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reusability of code&lt;/li&gt;
&lt;li&gt;easier to understand the code&lt;/li&gt;
&lt;li&gt;thus, making it simple to test and maintain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another important aspect in the &lt;em&gt;Node Philosophy&lt;/em&gt; is the dependency of each package. Writing a Node.js application, one tends to use a lot of packages (&lt;em&gt;which is the genesis of Node.js Ecosystem: npm)&lt;/em&gt; and this might create a common problem known as: &lt;em&gt;dependency hell.&lt;/em&gt; To overcome this conflict, Node.js manages dependencies of each installed package to have its own separate set of dependencies.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://medium.com/@amanhimself/the-node-way-philosophy-of-a-platform-f9738ed5f9d2&quot;&gt;Originally Published at Medium.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item><item><title><![CDATA[JavaScript Code Conventions]]></title><description><![CDATA[This article is about coding conventions. Everywhere I read articles about complex things in programming, links to other good/better/awesome articles but nobody seems to talk about…]]></description><link>http://amanhimself.me//javascript-code-conventions/</link><guid isPermaLink="false">http://amanhimself.me//javascript-code-conventions/</guid><category><![CDATA[javascript]]></category><pubDate>Fri, 08 Jan 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This article is about coding conventions. Everywhere I read articles about complex things in programming, links to other good/better/awesome articles but nobody seems to talk about the the basic things in programming.&lt;/p&gt;
&lt;p&gt;Like the &lt;em&gt;coding conventions&lt;/em&gt; used by programmers in their work. I am a JavaScript enthusiast and never once did I came across a good article on basic conventions and guidelines to write code that is helpful for me and others to read my code.&lt;/p&gt;
&lt;p&gt;Thus, this is my attempt and this article contains some general &lt;em&gt;coding conventions&lt;/em&gt; as well as some specific guidelines only applicable to &lt;strong&gt;JavaScript.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;so-what-are-code-conventions&quot;&gt;&lt;a href=&quot;#so-what-are-code-conventions&quot; aria-label=&quot;so what are code conventions permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;So what are Code Conventions?&lt;/h3&gt;
&lt;p&gt;These are the guidelines about programming practices, file and directory structure and commenting.&lt;/p&gt;
&lt;p&gt;Now you may be wondering why do you need guidelines as for files and directory structure? Well, to keep simple and when working in a team you have to follow some rules for a specific file structure for that application. Otherwise it will be huge mess.&lt;/p&gt;
&lt;h3 id=&quot;style-guidelines&quot;&gt;&lt;a href=&quot;#style-guidelines&quot; aria-label=&quot;style guidelines permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Guidelines&lt;/h3&gt;
&lt;p&gt;They are the type of &lt;strong&gt;Code Convention&lt;/strong&gt; that includes the layout of the code within a file.&lt;/p&gt;
&lt;h3 id=&quot;indentation&quot;&gt;&lt;a href=&quot;#indentation&quot; aria-label=&quot;indentation permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indentation&lt;/h3&gt;
&lt;p&gt;The first thing to do when writing code in a file is how to handle &lt;em&gt;indentation&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array\&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i\&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;//some code&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array\&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i\&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;// code&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe in the previous example there is a flow. This is what indentation is all about. It makes the program readable. The &lt;em&gt;else if statement&lt;/em&gt; is used for the &lt;em&gt;if statement&lt;/em&gt; inside the &lt;em&gt;for loop&lt;/em&gt; and not the outside &lt;em&gt;if statement&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Two ways to achieve indentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using tabs&lt;/li&gt;
&lt;li&gt;using spaces&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Using Tabs&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For each indentation level, use one tab character. Thus, the second level will have two tab characters and so on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Using Space&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each indentation level is made up of multiple spaces. The levels contains spaces in pairs, like two spaces for first level, and four spaces for second level and so on.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;advantage&lt;/strong&gt; of using spaces over tabs is that all text editors are configured according to spaces and is treated exactly the same. The &lt;strong&gt;disadvantage&lt;/strong&gt; here is to put spaces in each line. Thankfully, we are in an era where text editors are smart enough and they automatically do indentation.&lt;/p&gt;
&lt;h3 id=&quot;avoid-asi-automatic-semicolon-insertion&quot;&gt;&lt;a href=&quot;#avoid-asi-automatic-semicolon-insertion&quot; aria-label=&quot;avoid asi automatic semicolon insertion permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoid ASI Automatic Semicolon Insertion&lt;/h3&gt;
&lt;p&gt;Avoiding semicolons is possible and if JavaScript has a mechanism called ASI, why the hell to care about semicolons? If you are comfortable with ASI carry on. But the rules of ASI are complex and using your time with in writing code rather than worrying about ASI is better.&lt;/p&gt;
&lt;p&gt;It causes &lt;em&gt;errors&lt;/em&gt; and sometimes things won’t work because the JavaScript parser may read things different from the way they are written.&lt;/p&gt;
&lt;p&gt;Also, semicolons improves the readability of the code for other programmers too. If you are working collaboratively, it’s a great help.&lt;/p&gt;
&lt;h3 id=&quot;avoid-horizontal-scrolling&quot;&gt;&lt;a href=&quot;#avoid-horizontal-scrolling&quot; aria-label=&quot;avoid horizontal scrolling permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoid Horizontal Scrolling&lt;/h3&gt;
&lt;p&gt;The recommended length of code in a line is 80 characters. Even though the text editors have become smart, the length of 80 characters has is still used as a convention.&lt;/p&gt;
&lt;h3 id=&quot;blank-lines-are-not-harmful&quot;&gt;&lt;a href=&quot;#blank-lines-are-not-harmful&quot; aria-label=&quot;blank lines are not harmful permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blank Lines are not harmful&lt;/h3&gt;
&lt;p&gt;Using blank lines to separate unrelated lines of code. It improves readability.&lt;/p&gt;
&lt;p&gt;Without blank lines:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array\&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i\&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;//some code&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array\&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i\&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;token comment&quot;&gt;// code&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

With blank lines&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array\&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i\&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;//some code&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array\&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i\&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt;array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// code&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;naming-convention&quot;&gt;&lt;a href=&quot;#naming-convention&quot; aria-label=&quot;naming convention permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Naming Convention&lt;/h3&gt;
&lt;p&gt;ECMAScript uses &lt;strong&gt;&lt;em&gt;camelCase&lt;/em&gt;&lt;/strong&gt; convention. You should too when naming Variables and Functions. And try to use meaningful names for those variables and functions and keep them short.&lt;/p&gt;
&lt;h4 id=&quot;function-naming&quot;&gt;&lt;a href=&quot;#function-naming&quot; aria-label=&quot;function naming permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Function Naming&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;In JS, all we do is make functions in form of &lt;em&gt;callbacks&lt;/em&gt; and&lt;em&gt;events&lt;/em&gt;. Author of &lt;em&gt;Maintainable Javascript&lt;/em&gt; &lt;strong&gt;Nicholas Zakas&lt;/strong&gt; introduces some common conventions for functions. I find this helpful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;can&lt;/em&gt; Function that returns a boolean&lt;/li&gt;
&lt;li&gt;&lt;em&gt;has&lt;/em&gt; Function that returns a boolean&lt;/li&gt;
&lt;li&gt;&lt;em&gt;is&lt;/em&gt; Function that returns a boolean&lt;/li&gt;
&lt;li&gt;&lt;em&gt;get&lt;/em&gt; Function that returns a non-boolean&lt;/li&gt;
&lt;li&gt;&lt;em&gt;set&lt;/em&gt; Function that is used to save a value&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;constructors&quot;&gt;&lt;a href=&quot;#constructors&quot; aria-label=&quot;constructors permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Constructors&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Constructors are functions too and are used to create objects via new operator. But avoid using &lt;em&gt;camelCase&lt;/em&gt; and use &lt;strong&gt;&lt;em&gt;PascalCase&lt;/em&gt;&lt;/strong&gt; instead.&lt;/p&gt;
&lt;p&gt;It is helpful since JavaScript uses the same for naming pre-defined constructors.&lt;/p&gt;
&lt;h3 id=&quot;comments&quot;&gt;&lt;a href=&quot;#comments&quot; aria-label=&quot;comments permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comments&lt;/h3&gt;
&lt;p&gt;For single-line comments, I observed this when using &lt;em&gt;JSLint&lt;/em&gt;, after // use a space between them(the two slashes) and the comment.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Single-Line Comment&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Following all conventions of can be hard and a stressful matter at times when you are focusing on the logic part of the code. Thus, there is an alternative which works for me most of the time, is the&lt;/em&gt; &lt;a href=&quot;https://atom.io/packages/atom-beautify&quot;&gt;&lt;strong&gt;&lt;em&gt;Beautify&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;package that I use in the text editor&lt;/em&gt; &lt;a href=&quot;http://www.atom.io&quot;&gt;&lt;strong&gt;&lt;em&gt;Atom&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; &lt;em&gt;and I am sure it is available for the majority of other text editors.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://medium.com/@amanhimself/javascript-conventions-74d6ff728082&quot;&gt;Originally Published at Medium.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>amanmittal.work@gmail.com</author></item></channel></rss>