{"componentChunkName":"component---src-templates-post-js","path":"/basic-navigation-in-ionic-applications","webpackCompilationHash":"c3a562291cd8e443a353","result":{"data":{"site":{"siteMetadata":{"title":"Aman Mittal - Fullstack Developer","description":"Aman Mittal - Developer and Technical writer.","author":{"name":"Aman Mittal"},"keywords":["Fullstack Developer"]}},"mdx":{"frontmatter":{"title":"Basic Navigation in Ionic Applications","date":"October 31, 2017","author":"Aman Mittal","banner":null,"slug":"basic-navigation-in-ionic-applications","keywords":null},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"basic-navigation-in-ionic-applications\",\n  \"date\": \"2017-10-31T00:00:00.000Z\",\n  \"title\": \"Basic Navigation in Ionic Applications\",\n  \"categories\": [\"ionic\"],\n  \"description\": \"---\",\n  \"published\": true,\n  \"author\": \"Aman Mittal\",\n  \"banner\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://cdn-images-1.medium.com/max/800/0*2UfFX3Dh2lLcloeF.jpg\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Navigation in Ionic does not work using normal routing like you might have done in some of the client side web frameworks, especially when compared to browser based navigation. It uses the terminology of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pages\"), \" which I find is more generalised and correctly named as compared Ionic version 1's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"states\"), \". This approach is quite similar to navigation in a native mobile application.\"), mdx(\"p\", null, \"Pages are \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"pushed\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"popped\"), \" from the navigation controller a class defined whose subclass available in Ionic is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ion-nav\"), \". The logic here is equivalent to that of a stack. The purpose of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ion-nav\"), \" is to work with the navigation stack.\"), mdx(\"p\", null, \"To define a nav bar in an ionic app:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!--Home.html-->\\n<ion-navbar>\\n  <ion-title>\\n    Ionic App\\n  </ion-title>\\n</ion-navbar>\\n\")), mdx(\"p\", null, \"Inside the typescript file associated to above HTML code, we will have access to Navigation Controller.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// home.ts\\nimport { Component } from '@angular/core'\\nimport { NavController } from 'ionic-angular'\\n\\n@Component({\\n  selector: 'page-home',\\n  templateUrl: 'home.html'\\n})\\nexport class HomePage {\\n  constructor(public navCtrl: NavController) {}\\n}\\n\")), mdx(\"p\", null, \"Thus, we can access \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavController\"), \" and it's properties such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"push\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pop\"), \" to navigate to a different page or back to the previous page.\"), mdx(\"p\", null, \"Note: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Deeplinking is available in Ionic with URLs but that is altogether a different topic.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/hackernoon/https-medium-com-amanhimself-basic-navigation-in-ionic-applications-ecb199cdf15b\"\n  }), \"Originally Published at Hackernoon.com\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"ca791182-19d5-5cf2-8921-e7fc69dc9bbd","prev":{"id":"67c7c7d8-0a45-5127-8a6a-68152ca95078","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"In this post, I will be showing you to change font in any Ionic 2/3 application. To start with, I will be setting up a new ionic project such that you can refer back to on Github. cd  in to the new project created by the above Ionic CLI command and…","fields":{"title":"Using Google Fonts in an Ionic Application","slug":"using-google-fonts-in-an-ionic-application","date":"2017-11-09T00:00:00.000Z"},"code":{"scope":""}},"next":{"id":"3f9c954b-e875-5257-809b-b8364fcb8e15","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"There is an element of confusion when it comes to use FontAwesome in an Ionic Application. To include this fonts library in Ionic needs a bit of configuration and this step by step guide will provide just that. Bootstrap an Ionic Application Create a…","fields":{"title":"How to use Font Awesome in an Ionic Application","slug":"how-to-use-font-awesome-in-an-ionic-application","date":"2017-10-18T00:00:00.000Z"},"code":{"scope":""}}}}}