{"componentChunkName":"component---src-templates-post-js","path":"/migrating-from-expressjs-4-to-5","webpackCompilationHash":"c3a562291cd8e443a353","result":{"data":{"site":{"siteMetadata":{"title":"Aman Mittal - Fullstack Developer","description":"Aman Mittal - Developer and Technical writer.","author":{"name":"Aman Mittal"},"keywords":["Fullstack Developer"]}},"mdx":{"frontmatter":{"title":"Migrating from Expressjs 4 to 5","date":"January 11, 2017","author":"Aman Mittal","banner":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='121'%3e%3cpath%20d='M44%2032c-15%204-22%2026-15%2042%206%2012%2020%2016%2032%2010%206-3%2011-10%2011-15%200-4-2-2-3%202-3%2013-21%2018-33%209-3-2-7-11-7-17v-3h44v-5c-2-17-15-27-29-23m100%200c-5%201-12%207-14%2012-1%202-1%201-1-4l-1-7c-1-1-1%2011-1%2035l1%2036%201-16V73l2%203c6%2012%2023%2015%2033%205%2012-10%2012-34%200-44-6-5-12-7-20-5m55%200c-4%201-10%207-13%2010%200%202-1%201-1-3v-6l-1%2026c0%2032%201%2037%202%207%200-18%201-20%203-23%203-5%207-8%2013-9%204-1%206-2%203-3l-6%201m27%200c-12%205-17%2013-17%2027%200%2013%204%2021%2012%2025%2014%207%2033-2%2033-15%200-3-1-1-3%203-2%208-13%2014-22%2012-10-1-16-8-18-19v-5h44v-3c0-6-2-12-5-16-4-8-16-12-24-9m51%200c-8%202-12%206-12%2013s3%2010%2012%2013c18%205%2019%205%2021%208%208%209%200%2018-14%2018-11%201-18-4-19-13-1-4-3-4-2%201%201%209%208%2015%2021%2015%2012%200%2019-6%2019-14%200-9-4-12-20-16-14-4-16-5-16-12s6-11%2015-11c10%200%2015%203%2017%2010l2%204c2%200%200-7-2-10-4-5-15-8-22-6m49%200c-7%202-12%207-11%2014%200%207%203%209%2017%2013%2015%204%2019%207%2019%2013%200%207-7%2012-17%2012-11%201-17-4-19-12-1-5-3-5-2-1%201%208%205%2013%2013%2015%2013%204%2026-2%2027-12%201-9-4-13-20-17-13-3-16-5-16-12s6-11%2016-11c9%200%2015%204%2016%2011%201%204%203%204%202%200-1-10-13-16-25-13M78%2033l9%2012%209%2013-10%2014-10%2014c0%202%203-2%2010-11l10-13%202-2%2010%2013c9%2011%2012%2015%2012%2012l-10-13-10-14%209-13c9-11%2011-15%207-11l-10%2012-8%2010-9-12c-8-11-11-14-11-11m-36%202c-7%203-13%2013-13%2020v2h42l-1-5c-2-11-8-17-19-18l-9%201m100%201c-5%202-8%205-10%2010-3%205-3%2022%200%2028%206%2011%2021%2014%2030%206%2011-10%2011-34-1-43-4-3-15-4-19-1m82-1c-5%203-10%209-11%2014-3%209-5%208%2019%208h21v-4c-1-7-5-13-9-16-5-3-16-4-20-2'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":3.297872340425532,"src":"/static/3d1b2fa910cb7590365b6c4268b1a553/59176/banner.png","srcSet":"/static/3d1b2fa910cb7590365b6c4268b1a553/e23ba/banner.png 225w,\n/static/3d1b2fa910cb7590365b6c4268b1a553/b5207/banner.png 450w,\n/static/3d1b2fa910cb7590365b6c4268b1a553/59176/banner.png 465w","srcWebp":"/static/3d1b2fa910cb7590365b6c4268b1a553/c84ca/banner.webp","srcSetWebp":"/static/3d1b2fa910cb7590365b6c4268b1a553/825b0/banner.webp 225w,\n/static/3d1b2fa910cb7590365b6c4268b1a553/75154/banner.webp 450w,\n/static/3d1b2fa910cb7590365b6c4268b1a553/c84ca/banner.webp 465w","sizes":"(max-width: 465px) 100vw, 465px"}}},"slug":"migrating-from-expressjs-4-to-5","keywords":null},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"migrating-from-expressjs-4-to-5\",\n  \"date\": \"2017-01-11T00:00:00.000Z\",\n  \"title\": \"Migrating from Expressjs 4 to 5\",\n  \"categories\": [\"nodejs\"],\n  \"description\": \"---\",\n  \"published\": true,\n  \"author\": \"Aman Mittal\",\n  \"banner\": \"banner.png\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"ExpressJS 5.0 is in alpha release stage but I believe we\\u2019ll be adding it as a dependency in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" files in matter of no time. This article gives some tips regarding the way we are writing code using this framework and how we should adapt the new changes even if we are using ExpressJS \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"version 4.0\"), \".\"), mdx(\"p\", null, \"I\\u2019ll start with most common thing such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"response\"), \"\\xA0.\"), mdx(\"p\", null, \"Express 5 no longer supports the signature \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.send\"), \"\\xA0, instead we should adapt using this method in this form:\"), mdx(\"p\", null, \"res.status(statusCode).send();\"), mdx(\"p\", null, \"We have to set the status code before sending the response object. This new version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.send\"), \" is basically a chain of two methods: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.status\"), \" & \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.send\"), \".\"), mdx(\"p\", null, \"With that mind, ExpressJS 5 deprecates \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.send(statusCode)\"), \" method where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"statusCode\"), \" is the number representing the HTTP response header status code. To send just the statusCode, that is, without sending the response object, we can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.sendStatus(statusCode)\"), \" method.\"), mdx(\"p\", null, \"In similar manner, other methods that have been changed are:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"res.json() --> res.status().json()\\nres.jsonp() --> res.status.jsonp()\\n\")), mdx(\"p\", null, \"Another notable method that is going to be deprecated in next version of ExpressJS is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.sendfile()\"), \"\\xA0. Instead, we must adapt its new form, the camelCase one: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.sendFile()\"), \" which is already been supported by the ExpressJS versions later than \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"4.8.x\"), \"\\xA0. It comes with optional parameters that you can check them \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://expressjs.com/en/4x/api.html#res.sendFile\"\n  }), mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"here\")), mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".\")), mdx(\"p\", null, \"Whether you are planning to use the alpha release of Express 5.0 or still going on with the latest versions of Express 4.0, I would suggest to start adapting these methods immediately.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"The full list of changes or the official Express Migration Guide is to be found\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://expressjs.com/en/guide/migrating-5.html\"\n  }), mdx(\"strong\", {\n    parentName: \"a\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"here\"))), mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \".\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hackernoon.com/migrating-from-expressjs-4-to-5-156dcd80eb11\"\n  }), \"Originally Published at Hackernoon.com\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7f176c20-73ca-5862-99cf-099ebd66a2cf","prev":{"id":"ada27464-fc40-5cf4-b078-7a43f6ed2000","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"Finding job can be difficult. The task is not easy. Often the employers have unrealistic expectations for the sort of candidate they are looking to hire. Sometimes, the employers are unable to express with clarity what they want from the candidate…","fields":{"title":"How to maintain Sanity when finding a job","slug":"how-to-maintain-sanity-when-finding-a-job","date":"2017-02-19T00:00:00.000Z"},"code":{"scope":""}},"next":{"id":"c3e4b064-dc6d-5425-89f9-e3fa6a891425","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"Yes, I use  Bower  to maintain front-end dependencies, mostly for my side projects. Whatever you say, Bower is good and I am too anxious to mess with npm dependencies for front-end development. Plus, I feel that maintaining front-end dependencies…","fields":{"title":"Using Bower With Heroku","slug":"using-bower-with-heroku","date":"2016-12-29T00:00:00.000Z"},"code":{"scope":""}}}}}