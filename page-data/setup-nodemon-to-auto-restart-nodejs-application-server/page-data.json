{"componentChunkName":"component---src-templates-post-js","path":"/setup-nodemon-to-auto-restart-nodejs-application-server","webpackCompilationHash":"c3a562291cd8e443a353","result":{"data":{"site":{"siteMetadata":{"title":"Aman Mittal - Fullstack Developer","description":"Aman Mittal - Developer and Technical writer.","author":{"name":"Aman Mittal"},"keywords":["Fullstack Developer"]}},"mdx":{"frontmatter":{"title":"Setup Nodemon to auto restart Nodejs application server","date":"September 10, 2017","author":"Aman Mittal","banner":null,"slug":"setup-nodemon-to-auto-restart-nodejs-application-server","keywords":null},"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"setup-nodemon-to-auto-restart-nodejs-application-server\",\n  \"date\": \"2017-09-10T00:00:00.000Z\",\n  \"title\": \"Setup Nodemon to auto restart Nodejs application server\",\n  \"categories\": [\"nodejs\"],\n  \"description\": \"---\",\n  \"published\": true,\n  \"author\": \"Aman Mittal\",\n  \"banner\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://cdn-images-1.medium.com/max/2560/1*aeWo6e6FC8InJwBl3TmpDw.jpeg\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Manually restarting Node.js application is a tiring and tedious job. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/nodemon\"\n  }), \"Nodemon\"), \" is the best solution available to autorestart a nodejs app server in development mode.\"), mdx(\"h3\", null, \"Step 1\"), mdx(\"p\", null, \"Organize the source directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" and initiate it with an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.js\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.js\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"server.js\"), \" or any other convention you use to bootstrap a Node.js server.\"), mdx(\"p\", null, \"Update the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" file accordingly by adding a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"start\"), \" script.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"name\\\": \\\"nodemon-auto-restart\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node src/index.js\\\"\\n  },\\n  \\\"keywords\\\": [],\\n  \\\"author\\\": \\\"Aman Mittal <amandeepmittal@live.com> (http://amandeepmittal.github.io/)\\\",\\n  \\\"license\\\": \\\"MIT\\\"\\n}\\n\")), mdx(\"h3\", null, \"Step 2\"), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"express\"), \" or any other framework as dependency to bootstrap a minimal server.\"), mdx(\"p\", null, \"Code for a minimal server:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"'use strict'\\n\\nconst express = require('express')\\nconst app = express()\\n\\napp.use('/', (req, res) => {\\n  res.status(200).send('Hello World!')\\n})\\n\\napp.listen(3000)\\n\")), mdx(\"p\", null, \"In first terminal window start the server:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ npm run start\\n> node src/index.js\\n\")), mdx(\"p\", null, \"In second terminal window, request the url to test if the api is working and to see the response message:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ curl -X GET http://localhost:3000/\\nHello World!\\n\")), mdx(\"p\", null, \"Now if I change the response message, I have to restart the server to get the desired result:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"app.use('/', (req, res) => {\\n  res.status(200).send('Lorem Ipsum')\\n})\\n\")), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + C\"), \" to stop the currently running server and restart it by using the same command before: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run start\"), \".\"), mdx(\"p\", null, \"Using the curl command again from terminal window we get the desired result:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"curl -X GET http://localhost:3000/\\nLorem Ipsum\\n\")), mdx(\"p\", null, \"This whole process is repetitive will slow your development of any package or application. Better solution is to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nodemon\"), \".\"), mdx(\"h3\", null, \"Step 3\"), mdx(\"p\", null, \"Add nodemon as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"devDependency\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ npm i -D nodemon\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"name\\\": \\\"nodemon-auto-restart\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node src/index.js\\\"\\n  },\\n  \\\"keywords\\\": [],\\n  \\\"author\\\": \\\"Aman Mittal <amandeepmittal@live.com> (http://amandeepmittal.github.io/)\\\",\\n  \\\"license\\\": \\\"MIT\\\",\\n  \\\"dependencies\\\": {\\n    \\\"express\\\": \\\"4.15.3\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"nodemon\\\": \\\"1.11.0\\\"\\n  }\\n}\\n\")), mdx(\"h3\", null, \"Step 4\"), mdx(\"p\", null, \"Make another script \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dev\"), \" under npm scripts in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node src/index.js\\\",\\n    \\\"dev\\\": \\\"nodemon --watch src src/index.js\\\"\\n  }\\n}\\n\")), mdx(\"p\", null, \"Now run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ npm run dev\"), \" and request using curl command, we will see the last familiar result:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"curl -X GET http://localhost:3000/\\nLorem Ipsum\\n\")), mdx(\"p\", null, \"If I change the response message in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.js\"), \" file back to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hello World\"), \", this time I don't I have to restart the server since \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nodemon\"), \" is watching for the changes using inside the src directory, through its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--watch\"), \"parameter. If I use the curl command again, the result is familiar with the update:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"curl -X GET http://localhost:3000/\\nHello World\\n\")), mdx(\"p\", null, \"One can verify by observing the log messages in the terminal window where nodemon is running:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ npm run dev\\n\\n> nodemon-auto-restart@1.0.0 dev /Users/amandeepmittal/github/nodemon-auto-restart\\n> nodemon --watch src src/index.js\\n\\n[nodemon] 1.11.0\\n[nodemon] to restart at any time, enter `rs`\\n[nodemon] watching: /Users/amandeepmittal/github/nodemon-auto-restart/src/**/*\\n[nodemon] starting `node src/index.js`\\n[nodemon] restarting due to changes...\\n[nodemon] starting `node src/index.js`\\n\")), mdx(\"p\", null, \"To stop the nodemon process, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + C\"), \".\"), mdx(\"p\", null, \"Full Source at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/amandeepmittal/nodemon-auto-restart\"\n  }), mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"this\")), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Github Repository\"), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/hackernoon/setup-nodemon-to-auto-restart-nodejs-application-server-8d8993b7dfd9\"\n  }), \"Originally Published at Hackernoon.com\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"9b28f928-d167-51c2-a0a6-9b785a1e7920","prev":{"id":"ab52eb75-14a8-52ce-a4b0-9d9c48d230d2","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"node_modules  tend to take a lot of space in your local system especially if you work with Node.js or related frameworks (such as client side frameworks: React or Angular). They are the part and parcel of modern day JavaScript applications and…","fields":{"title":"Remove node_modules Recursively","slug":"remove-node-modules-recursively","date":"2017-09-21T00:00:00.000Z"},"code":{"scope":""}},"next":{"id":"dacb7229-6fab-5403-96b7-b03b72d11adf","parent":{"name":"index","sourceInstanceName":"blog"},"excerpt":"When you arise in the morning, think of what a precious privilege it is to be alive -to breathe, to think, to enjoy, to love. (Marcus Aurelius) About four months before, I was not a morning person at all. I chose not give mornings the importance they…","fields":{"title":"How to Hack Your Mornings so You Get Most of Your Time","slug":"how-to-hack-your-mornings-so-you-get-most-of-your-time","date":"2017-08-28T00:00:00.000Z"},"code":{"scope":""}}}}}